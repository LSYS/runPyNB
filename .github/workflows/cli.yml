name: CLI  # Test and ensure 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build_linux:
    name: Build ubuntu wheel for python${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.6','3.7', '3.8', '3.9', '3.10' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install runpynb
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test run in CL
      run: |
        runpynb ./assets/notebooks/hello.ipynb
                
  build_macOS:
    name: Build macOS wheel for python${{ matrix.python-version }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.6','3.7', '3.8', '3.9', '3.10' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install runpynb
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test run in CL
      run: |
        runpynb ./assets/notebooks/hello.ipynb

  build_windows:
    name: Build windows wheel for python${{ matrix.python-version }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.6','3.7', '3.8', '3.9', '3.10' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install runpynb
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test run in CL
      run: |
        runpynb ./assets/notebooks/hello.ipynb
